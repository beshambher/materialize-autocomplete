{
  "name": "Materialize-autocomplete",
  "tagline": "Materialize-css styled autocomplete",
  "body": "# materialize-autocomplete\r\nMaterialize-css styled autocomplete, examples:  [https://icefox0801.github.io/materialize-autocomplete/examples/](https://icefox0801.github.io/materialize-autocomplete/examples/)\r\n\r\n\r\n## Install\r\n+ npm \r\n```sh\r\n$ npm install materialize-autocomplete\r\n```\r\n+ bower\r\n```sh\r\n$ bower install materialize-autocomplete\r\n```\r\n\r\n## Usage\r\n![autocomplete](https://cloud.githubusercontent.com/assets/3138397/17131670/1cca05be-5351-11e6-8c77-1d9a98ab765c.gif)\r\n+ When typing inside an input, autocomplete prompts will show on dropdown list\r\n+ Choosing an option by click or `↑`, `↓`, `Enter` keys\r\n+ Removing a selection by click `x` when enable multiple selection\r\n\r\n```javascript\r\nvar autocomplete =$('#el').autocomplete({\r\n    limit: 20,\r\n    multiple: {\r\n        enable: true,\r\n        maxSize: 10,\r\n        onExist: function (item) { /* ... */ },\r\n        onExceed: function (maxSize, item) { /* ... */ }\r\n    },\r\n    appender: {\r\n        el: '#someEl'\r\n    },\r\n    getData: function (value, callback) {\r\n        // ...\r\n        callback(value, data);\r\n    }\r\n});\r\n```\r\n\r\n## $.fn.materialize_autocomplete\r\n+ `$.fn.materialize_autocomplete(options) [function]`: Initialize an `autocomplete` widget and return an `Autocomplete` instance\r\n\r\n## Autocomplete options\r\n+ `cacheable [boolean]`: Dropdown data cacheable or not, default: `true`\r\n+ `limit [number]`: Max number of items show in dropdown, default: `10`\r\n+ `multiple [object]`: Configuration of multiple selection, seeing [properties of multiple](#properties-of-multiple) for more details\r\n+ `hidden [object]`: Configuration of hidden input (used for storing **ids** joined by selections or **id** of a selection), seeing [properties of hidden](#properties-of-hidden) for more details\r\n+ `appender [object]`: Configuration of appender (where to append selections when multiple selection is enabled), seeing [properties of appender](#properties-of-appender) for more details\r\n+ `dropdown [object]`: Configuration of dropdown, seeing [properties of dropdown](#properties-of-dropdown) for more details\r\n+ `handlers [object]`: Event handlers of the widget\r\n+ `getData(value, callback) [function]`: Function for getting dropdown list data, asynchronous called with a `callback`\r\n    + `value [string]`: Input value，when `input` event triggered, `getData` will be called with input value\r\n    + `callback(value, data) [function]`: Callback function\r\n        + `value [string]`: Same as `value` above\r\n        + `data [array]`: Data array，should be formatted as `[{ 'id': '1', 'text': 'a' }, { 'id': '2', 'text': 'b'}]`\r\n+ `throttling [boolean]`: Throttling for `getData` function or not，default: `true`\r\n\r\n\r\n## Autocomplete\r\n### Constructor\r\n+ `new Autocomplete(el, options) [function]`: Constructor\r\n    + `el [string|object]`: DOM element on which the widget applys\r\n    + `options [object]`: Configuration of the widget\r\n\r\n### Instance property:\r\n+ `autocomplete.options [object]`: Configuration object\r\n+ `autocomplete.$el [object]`: JQuery object on which the widget applys\r\n+ `autocomplete.$wrapper [object]`: Wrapper jQuery object，equal to `autocomplete.$el.parent()`\r\n+ `autocomplete.compiled [object]`: Compiling functions for `tagTemplate` and `itemTemplate`\r\n+ `autocomplete.$dropdown [object]`: JQuery object of dropdown\r\n+ `autocomplete.$appender [object]`: JQuery object of appender\r\n+ `autocomplete.$hidden [object]`: JQuery object of hidden input\r\n+ `autocomplete.resultCache [object]`: Result cache object of `getData` when `cacheable` is `true`\r\n+ `autocomplete.value [array]`: Value of widget, when multiple selection is enabled, `autocomplete.value` is **ids** joined by selections, otherswise `autocomplete.value` is **id** of a selection\r\n\r\n### Instance methods:\r\n+ `autocomplete.initialize() [function]`: Initializing method\r\n+ `autocomplete.render() [function]`: Rendering method\r\n+ `autocomplete.setValue(item) [function]`: Value setting method\r\n    + `item [object]`: Selection object, e.g. `{ id: '1', text: 'a'}`\r\n+ `autocomplete.append(item) [function]`: Appending an selection, called when `options.multiple.enable` is `true`\r\n+ `autocomplete.remove(item) [function]`: Removing an selection, called when `options.multiple.enable` is `true`\r\n+ `autocomplete.select(item) [function]`: Setting the value, called when `options.multiple.enable` is `false`\r\n\r\n## Detailed options\r\n### Properties of multiple\r\n|property|description|default|\r\n|:---|:---|:---|\r\n|`enable [boolean]`|Enabled or not|`false`|\r\n|`maxSize [number]`|Max number of selections|`4`|\r\n|`onExist [function]`|Callback when selection to append exists||\r\n|`onExceed [function]`|Callback when selections exceed `maxSize`||\r\n|`onAppend [function]`|Callback after appending a selection||\r\n|`onRemove [function]`|Callback after removing a selection||\r\n### Properties of hidden\r\n|property|description|default|\r\n|:---|:---|:---|\r\n|`enable [boolean]`|Enabled or not|`false`|\r\n|`el [string|object]`|Applying an existing DOM element if not null, otherwise created one|`''`|\r\n|`inputName [string]`|`name` attribute of hidden input|`''`|\r\n|`required [boolean]`|`required` attribute of hidden input|`false`|\r\n### Properties of appender\r\n|property|description|default|\r\n|:---|:---|:---|\r\n|`el [string|object]`|Applying an existing DOM element if not null, otherwise created one|`''`|\r\n|`tagName [string]`|`TagName` of appender when `appender.el` is null|`ul`|\r\n|`className [string]`|`ClassName` attribute of appender|`ac-appender`|\r\n|`tagTemplate [string]`|Template string of selections inside appender||\r\nNote that `tagTemplate` should use [undescore template](http://underscorejs.org/#template) semantic, **`data-id` and `data-text` attributes should be specified on outest DOM**\r\n### Properties of dropdown\r\n|property|description|default|\r\n|:---|:---|:---|\r\n|`el [string|object]`|Applying an existing DOM element if not null, otherwise created one|`''`|\r\n|`tagName [string]`|`TagName` of dropdown when `dropdown.el` is null|`ul`|\r\n|`className [string]`|`ClassName` attribute of dropdown|`ac-dropdown`|\r\n|`itemTemplate [string]`|Template string of items inside dropdown||\r\n|`noItem [string]`|Prompt for no data|`''`|\r\nNote that `itemTemplate` should use [undescore template](http://underscorejs.org/#template), **`data-id` and `data-text` attributes should be specified on outest DOM**\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}